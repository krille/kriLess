/*------------------------------------*\
	#SETTINGS
\*------------------------------------*/
@layout-gutter:           @base-spacing-unit;
@layout-gutter--tiny:     round(@layout-gutter / 4);
@layout-gutter--small:    round(@layout-gutter / 2);
@layout-gutter--large:    round(@layout-gutter * 2);
@layout-gutter--huge:     round(@layout-gutter * 4);

@enable-layout--tiny:     false;
@enable-layout--small:    false;
@enable-layout--large:    false;
@enable-layout--huge:     false;
@enable-layout--flush:    false;
@enable-layout--rev:      false;
@enable-layout--middle:   false;
@enable-layout--bottom:   false;
@enable-layout--right:    false;
@enable-layout--center:   false;
@enable-layout--auto:     false;



& when (@use-layout = true) {

	/*------------------------------------*\
		#LAYOUT
	\*------------------------------------*/

	/**
	 * The inuitcss layout system uses `box-sizing: border-box;` and
	 * `display: inline-block;` to create an extremely powerful, flexible
	 * alternative to the traditional grid system. Combine the layout items with
	 * the widths found in `trumps.widths`.
	 */

	/**
	 * Begin a layout group.
	 */
	.layout {
		list-style: none;
		margin:  0;
		padding: 0;
		margin-left: -@layout-gutter;
		font-size: 0;
	}

		/**
		 * 1. Cause columns to stack side-by-side.
		 * 2. Space columns apart.
		 * 3. Align columns to the tops of each other.
		 * 4. Full-width unless told to behave otherwise.
		 * 5. Required to combine fluid widths and fixed gutters.
		 */
		.layout__item {
			display: inline-block; /* [1] */
			padding-left: @layout-gutter; /* [2] */
			vertical-align: top; /* [3] */
			width: 100%; /* [4] */
			box-sizing: border-box; /* [5] */
			.font-size(@base-font-size, none);
		}





	/**
	 * Layouts with tiny gutters.
	 */
	& when (@enable-layout--tiny = true) {


		.layout--tiny {
			margin-left: -(@layout-gutter--tiny);

			> .layout__item {
				padding-left: @layout-gutter--tiny;
			}

		}

	}





	/**
	 * Layouts with small gutters.
	 */
	& when (@enable-layout--small = true) {


		.layout--small {
			margin-left: -(@layout-gutter--small);

			> .layout__item {
				padding-left: @layout-gutter--small;
			}

		}

	}





	/**
	 * Layouts with large gutters.
	 */
	& when (@enable-layout--large = true) {


		.layout--large {
			margin-left: -(@layout-gutter--large);

			> .layout__item {
				padding-left: @layout-gutter--large;
			}

		}

	}





	/**
	 * Layouts with huge gutters.
	 */
	& when (@enable-layout--huge = true) {


		.layout--huge {
			margin-left: -(@layout-gutter--huge);

			> .layout__item {
				padding-left: @layout-gutter--huge;
			}

		}

	}





	/**
	 * Layouts with no gutters.
	 */
	& when (@enable-layout--flush = true) {


		.layout--flush {
			margin-left: 0;

			> .layout__item {
				padding-left: 0;
			}

		}

	}





	/**
	 * Reversed rendered order of layout items, e.g. items 1, 2, 3, 4 in your
	 * markup will display in order 4, 3, 2, 1 on your page.
	 */
	& when (@enable-layout--rev = true) {

		.layout--rev {
			direction: rtl;
			text-align: left;

			> .layout__item {
				direction: ltr;
				text-align: left;
			}

		}

	}





	/**
	 * Align layout items to the vertical centers of each other.
	 */
	& when (@enable-layout--middle = true) {

		.layout--middle {

			> .layout__item {
				vertical-align: middle;
			}

		}

	}





	/**
	 * Align layout items to the vertical bottoms of each other.
	 */
	& when (@enable-layout--bottom = true) {

		.layout--bottom {

			> .layout__item {
				vertical-align: bottom;
			}

		}

	}





	/**
	 * Make the layout items fill up from the right hand side.
	 */
	& when (@enable-layout--right = true) {

		.layout--right {
			text-align: right;

			> .layout__item {
				text-align: left;
			}

		}

	}





	/**
	 * Make the layout items fill up from the center outward.
	 */
	& when (@enable-layout--center = true) {

		.layout--center {
			text-align: center;

			> .layout__item {
				text-align: left;
			}

		}

	}





	/**
	 * Cause layout items to take up a non-explicit amount of width.
	 */
	& when (@enable-layout--auto = true) {

		.layout--auto {

			> .layout__item {
				width: auto;
			}

		}

	}



}
